#!/usr/bin/env python3
# -*- conding: utf-8 -*-
# code by: J03
# date : 23 - 12 - 2020

import pprint

try:
    from .server import Server
except:
    from server import Server

options = {
    "host": '',
    "port": '5555',
}

text_asci = """
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
█░▄▀▄░█░██░█░▄▄█▀▄▀█░▄▄▀██▄██▀▄▄▀█▄░▄
█░█▄█░█░▀▀░█▄▄▀█░█▀█░▀▀▄██░▄█░▀▀░██░█
█▄███▄█▀▀▀▄█▄▄▄██▄██▄█▄▄█▄▄▄█░█████▄█
▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
   ------ Nomeniavo Joe -------
"""


class Exploit:
    command = {
        "show": 'avoir une appercu des options',
        "set": 'set host ou port [value]',
        "listen": 'listen: lance le server sur le port 5555 par defaut',
        "exit": 'pour quitter le programme',
        "help": 'pour voir le manuel aide'
    }

    @staticmethod
    def set(args):
        if args[1] in options:
            options[args[1]] = args[2]
        if args[0] in options:
            options[args[0]] = args[1]

    @staticmethod
    def listen(self, args=None):
        server = Server()
        server.runServer(options["host"], int(options["port"]))

    @staticmethod
    def exit(args=None):
        exit()

    @staticmethod
    def show(args=None):
        print(options)

    def help(self, args):
        try:
            if args[1] in self.command:
                print(self.command[args[1]])
            else:
                pprint.pprint(self.command)
        except:
            pprint.pprint(self.command)
